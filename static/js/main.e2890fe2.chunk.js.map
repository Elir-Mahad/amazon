{"version":3,"sources":["StateProvider.js","Header.js","CheckoutProduct.js","reducer.js","Subtotal.js","CheckOut.js","Product.js","Home.js","Login.js","App.js","serviceWorker.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Header","basket","console","log","className","to","src","alt","type","length","CheckoutProduct","id","title","image","price","rating","dispatch","Array","fill","map","_","onClick","getBasketTotal","reduce","amount","item","state","action","user","newBasket","index","findIndex","basketItem","splice","warn","Subtotal","renderText","decimalScale","displayType","thousandSeparator","prefix","CheckOut","Product","Home","Login","useState","email","setEmail","password","setPassword","onChange","event","target","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e2890fe2.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer } from \"react\";\n\n// Tasks:\n// setup data layer\n// we need this to track the shopping basket and the items that are in it\n\n// If i want to know the number of items that are in the shopping basket,\n// at a specific point, i would have to pass a prop from grandparent to parent to child\n// to figure out how many items were bought. (Refer to screenshot named 'drilling')\n// This process of passing props down, is called prop drilling.\n// Instead of doing this, we are going to react context api, to be able to identify the contents of the basket, without prop drilling.\n// The process for the react context api is similar to the process of\n// creating global variables that can be passed around in the react app.\n\n// Once we understand how to use the react context api,\n// we can usually copy and paste the contents of the file ,\n// and thereby insert it into the react project,\n// because the contents of the file don't change too much from project to project\n\n// This is the data layer\n\nexport const StateContext = createContext();\n\n// Build a provider , wrap the entire app inside of the provider and give it access to the data layer\n\nexport const StateProvider = ({ reducer, initialState, children }) => (\n\t<StateContext.Provider value={useReducer(reducer, initialState)}>\n\t\t{children}{\" \"}\n\t\t{/* children is equivalent to <App />. \n        For, in index.js, <App /> is nested in the StateProvider.\n        In the same way that, here, children is nested in Statecontext provider */}\n\t</StateContext.Provider>\n);\n\n// This is how we use it iniside of a component\n\nexport const useStateValue = () => useContext(StateContext);\n\n// the useStateValue constant is then going to be imported into the header.js\n","// Type rfce to make formatted functional component,\n// based on the name of the file, appear automatically\n\n//In this Header, we are going to create a nav bar\n// The nav bar will contain:\n// A.Logo on the left - > img\n// B. Search box\n// C. 3 links\n// D. Basket icon with number\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Header.css\";\n\nimport SearchIcon from \"@material-ui/icons/Search\"; // this imports the search icon from material-ui as a component\nimport ShoppingBasketIcon from \"@material-ui/icons/ShoppingBasket\";\n\nimport { useStateValue } from \"./StateProvider.js\";\n\nfunction Header() {\n\t// const [{ basket }, dispatch] = useStateValue();\n\n\t// useStateValue contains some stuff (this 'stuff' include the 'basket' and its contents)\n\t// We can 'fetch' and 'append' the items of the basket with --> const [{ basket }, dispatch]\n\n\t// 'Dispatch' facilitates the process of adding and removing items from the basket\n\t// The thing that's getting dispatched, is the action.type from the reducer.js\n\t// Whenever you want to manipulate a data layer, thats when you use dispatch, but if you only want to display the data layer, then you don't need dispatch\n\t// 'Basket' simply grabs the items that are in the basket.\n\n\t// For this example, all we need to do is 'fetch' the items in the basket\n\t// Therefore --> const [{ basket }, dispatch] = useStateValue(); has been commented out (line 21)\n\t// and it has been replaced with --> const [{ basket }] = useStateValue();\n\n\tconst [{ basket }] = useStateValue();\n\n\t// const [{ basket }] = useStateValue() will:\n\t// A. fetch the contents of the array basket\n\t// B. the array basket stored in the constant intitial state.\n\t// C. the constant initial state is stored in the reducer.js page\n\n\tconsole.log(basket);\n\n\t// In the console, this will outout an empty array.\n\t// When you click on an item, the console will output -> [{…}] ; this means that the basket array contains one item\n\t// When you click on another item, the console will output -> (2) [{…}, {…}] ; this means that the basket array contains two items\n\n\t// IF you click on the array, then you will get the properties of the item-objects nested in the array (just like json):\n\n\t//(2) [{…}, {…}]\n\t// 0:\n\t// id: \"1234\"\n\t// image: \"https://images-na.ssl-images-amazon.com/images/I/51T-sMqSMiL._SX329_BO1,204,203,200_.jpg\"\n\t// price: 11.96\n\t// rating: 5\n\t// title: \"The Lean Startup: How Today's Entrepreneurs Use Continuous Innovation to Create\"\n\t// __proto__: Object\n\t// 1:\n\t// id: \"1235\"\n\t// image: \"https://images-na.ssl-images-amazon.com/images/I/81QpkIctqPL._AC_SX679_.jpg\"\n\t// price: 89.99\n\t// rating: 4\n\t// title: \"Acer SB220Q bi 21.5 Inches Full HD (1920 x 1080) IPS Ultra-Thin Zero Frame Monitor (HDMI VGA port),Black\"\n\t// __proto__: Object\n\t// length: 2\n\n\treturn (\n\t\t<nav className=\"header\">\n\t\t\t{/* STEP A */}\n\n\t\t\t<Link to=\"/\">\n\t\t\t\t{/* Link connects a specific element to a specific page/route.\n                                Desired outcome: when the img below is clicked, it will redirect to the login page\n                                Method for achieving outcome: \n                                1. import link from react router dom\n                                2. wrap the img element with link\n                                3. Connect the path \"/login\" to link by writing <Link to =\"/login\"> */}\n\n\t\t\t\t<img\n\t\t\t\t\tclassName=\"header_logo\"\n\t\t\t\t\tsrc=\"http://pngimg.com/uploads/amazon/amazon_PNG11.png\"\n\t\t\t\t\talt=\"\"\n\t\t\t\t/>\n\t\t\t</Link>\n\n\t\t\t{/* STEP B */}\n\n\t\t\t<div className=\"header_search\">\n\t\t\t\t<input type=\"text\" className=\"header_searchInput\" />{\" \"}\n\t\t\t\t{/* Here we create the submit form for the search bar  */}\n\t\t\t\t<SearchIcon className=\"header_searchIcon\" />{\" \"}\n\t\t\t\t{/* Here we insert the searchicon component */}\n\t\t\t</div>\n\n\t\t\t{/* STEP C */}\n\n\t\t\t<div className=\"header_nav\">\n\t\t\t\t<Link to=\"/login\" className=\"header_link\">\n\t\t\t\t\t{\" \"}\n\t\t\t\t\t{/* wrap div with Link and connect to path */}\n\t\t\t\t\t<div className=\"header_option\">\n\t\t\t\t\t\t<span className=\"header_optionLineOne\"> Hello Momo </span>\n\n\t\t\t\t\t\t<span className=\"header_optionLineTwo\"> Sign in </span>\n\t\t\t\t\t</div>\n\t\t\t\t</Link>\n\n\t\t\t\t<Link to=\"/\" className=\"header_link\">\n\t\t\t\t\t{\" \"}\n\t\t\t\t\t{/* wrap div with Link and connect to path */}\n\t\t\t\t\t<div className=\"header_option\">\n\t\t\t\t\t\t<span className=\"header_optionLineOne\"> Returns </span>\n\n\t\t\t\t\t\t<span className=\"header_optionLineTwo\"> Orders </span>\n\t\t\t\t\t</div>\n\t\t\t\t</Link>\n\n\t\t\t\t<Link to=\"/\" className=\"header_link\">\n\t\t\t\t\t{\" \"}\n\t\t\t\t\t{/* wrap div with Link and connect to path */}\n\t\t\t\t\t<div className=\"header_option\">\n\t\t\t\t\t\t<span className=\"header_optionLineOne\"> Your </span>\n\n\t\t\t\t\t\t<span className=\"header_optionLineTwo\"> Prime </span>\n\t\t\t\t\t</div>\n\t\t\t\t</Link>\n\n\t\t\t\t{/* STEP D */}\n\n\t\t\t\t<Link to=\"/checkout\" className=\"header_link\">\n\t\t\t\t\t<div className=\"header_optionBasket\">\n\t\t\t\t\t\t{/* add shopping basket icon through material-ui */}\n\n\t\t\t\t\t\t<ShoppingBasketIcon />\n\n\t\t\t\t\t\t<span className=\"header_optionLineTwo header_basketCount\">\n\t\t\t\t\t\t\t{basket?.length}\n\n\t\t\t\t\t\t\t{/* This counts the items in the basket. \n\t\t\t\t\t\t\tThen it displays the number of items that are in the basket. \n\t\t\t\t\t\t\tSo if the basket has a lenght of two, that means that it contains two items.\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tWhenever the basket is being accessed, there will be a some time lag.\n\t\t\t\t\t\t\tLike 1 or 2 seconds to initialize.\n\t\t\t\t\t\t\tThis time lag, will be registerd as an error and the basket items will not be returned.\n\t\t\t\t\t\t\tTo avoid this, we must add the conditional (ternary) operator optional --> '?' after the word basket.\n\t\t\t\t\t\t\tThis stops the error from popping up.*/}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t</Link>\n\t\t\t</div>\n\t\t</nav>\n\t);\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"./checkoutProduct.css\";\nimport { useStateValue } from \"./StateProvider.js\";\n\nfunction CheckoutProduct({ id, title, image, price, rating }) {\n\tconst [{}, dispatch] = useStateValue(); // THIS IS THE DATA LAYER FROM STATE PROVIDER\n\t// THIS IS USUALLY SUMMONED WHEN WILL NEED TO THE GRAB THE BASKET ITEMS OR BASKET SOMEWHERE IN THE COMPONENT\n\n\tconst removeFromBasket = () => {\n\t\t// remove item from basket\n\t\tdispatch({\n\t\t\ttype: \"REMOVE_FROM_BASKET\", // this is the action.type from the reducer.js\n\t\t\tid: id // fetch the id of the item that's being removed\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"checkoutProduct\">\n\t\t\t<img className=\"checkoutProduct_image\" src={image} alt=\"\" />\n\t\t\t<div className=\"checkoutProduct_info\">\n\t\t\t\t<p className=\"checkoutProduct_title\">{title}</p>\n\t\t\t\t<p className=\"checkoutProduct_price\">\n\t\t\t\t\t<small>$</small>\n\t\t\t\t\t<strong>{price}</strong>\n\t\t\t\t</p>\n\t\t\t\t<div className=\"checkoutProduct_rating\">\n\t\t\t\t\t{/* the explanation for the how the logic behind the ratings is explained in product.js. \n                    Here i just copied the code without the explanations. */}\n\t\t\t\t\t{Array(rating)\n\t\t\t\t\t\t.fill()\n\t\t\t\t\t\t.map((_) => (\n\t\t\t\t\t\t\t<p>⭐</p>\n\t\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t\t<button onClick={removeFromBasket}>Remove from basket</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default CheckoutProduct;\n","// This is where the data layer logic goes\n\nexport const initialState = {\n\tbasket: [],\n\tuser: null\n\t// the data layer in the beginning is a basket with an empty array --> basket :[] ;\n\n\t// items will get added to it by the user\n\n\t// This is similar to the empty array, that is used in the constructor,\n\t// as a placeholder for incoming api data is being expected\n\n\t// To test whether the context api is working. Comment out the above 'basket:[]'\n\t// Uncomment the below basket\n\t// basket: [\"bread\", \"meat\"]\n\t// This basket has two items, therefore if the context api is working\n\t// then, on the page, it should display the number 2 next to the basket.\n\n\t// Or uncomment the below basket\n\t// basket: [\"bread\", \"meat\", \"pizza\"]\n\t// This basket has three items, therefore if the context api is working\n\t// then, on the page, it should display the number 3 next to the basket.\n};\n\nexport const getBasketTotal = (basket) =>\n\t// create a constant called getBasketTotal;\n\t// this constant has a parameter which is the actual shopping basket\n\n\tbasket?.reduce((amount, item) => item.price + amount, 0);\n\n// take the basket and return a reduce fuction\n// reduce is a function that has two paramaters\n// The first parameter is an amount (the price of the item)\n// The second parameter is item (the item-object that you reiterate through the basket)\n\n// add the price of the item to the original amount\n// the orignal amount starts at 0\n// increment all the prices of items in the basket\n\n// After all that is done the constant will get automaticaly exported\n// and it will be imported it into the subTotal.js ( --> CurrencyFormat -->value )\n\nconst reducer = (state, action) => {\n\t// The constant reducer stores a function that has the two parameter state and action.\n\t// We refer to the data layer as state; so anything inside the data layer is known as state.\n\t// We manipulate the data layer with actions; such as: add item to basket, remove item from basket,etc\n\n\t// console.log(action);\n\t// console log the items that are clicked on\n\t// this is to check that the click function is working\n\t// When the button is clicked, it should output the items object and properties in the browsers console\n\n\tswitch (action.type) {\n\t\t// switch stores an action, and the 'type' of that action\n\t\t// switch also checks all the cases (strings that represent a specific action )\n\n\t\tcase \"SET_USER\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuser: action.user\n\t\t\t};\n\n\t\tcase \"ADD_TO_BASKET\":\n\t\t\t// This  first case \"ADD_TO_BASKET\" represent the action of adding an item to the basket\n\t\t\t// Here we Logic for adding item to basket\n\n\t\t\treturn {\n\t\t\t\t// After the item, that has been clicked on, is added to the basket, return:\n\n\t\t\t\t...state, // Return whatever the state currently is [line 4]\n\t\t\t\t// If you had other properties, then this is where you insert all your properties this is similar to how you declare state in the constructor and then set.state in componentDidMount\n\n\t\t\t\tbasket: [...state.basket, action.item]\n\t\t\t\t// Return a new basket that's going to contain:\n\t\t\t\t// The current basket (whatever items were left over) + action.item (the item that was just picked)\n\t\t\t\t// So if you picked one item, then the new basket will contain: the 4 leftover items + the item that was previously picked. Which will be a total of 5 items.\n\n\t\t\t\t// (action.item gets the data points that we asked from in the addtobasket function )\n\t\t\t};\n\t\t// break; // this break signifies that the case logic is finished\n\n\t\tcase \"REMOVE_FROM_BASKET\": // this second case \"REMOVE_FROM_BASKET\" represent the action of removing an item to the basket\n\t\t\t// Below is the Logic for removing item from basket\n\n\t\t\tlet newBasket = [...state.basket];\n\n\t\t\t// let new basket equal whatever the current basket is.\n\t\t\t// Here we are simply cloning the basket, into our own variable which is: newBasket.\n\n\t\t\tconst index = state.basket.findIndex(\n\t\t\t\t(basketItem) => basketItem.id === action.id\n\t\t\t);\n\n\t\t\t// Whenever an items whose remove button was just pressed\n\t\t\t// the removeFromBasket function (in CheckoutProduct.js)\n\t\t\t// dispatches the id of that item.\n\n\t\t\t// This dispatching is formally identified as an 'action'.\n\t\t\t// And the thing being dispatched is the item's ID.\n\t\t\t// To highlight that this dispatching is an action,\n\t\t\t// we are going to call the id of the items that's been dispatched --> action.id.\n\n\t\t\t// So, when the action.id is dispatched:\n\t\t\t// [a] get the dispatched id (action.id) of the item whose remove button was just pressed.\n\t\t\t// [b] Check to see if the id of this item, is equivalent to the id of any item that are currently in the basket\n\n\t\t\tif (index >= 0) {\n\t\t\t\t// if the index is greater than or equal to 0 [this means that there are items in the basket]\n\t\t\t\tnewBasket.splice(index, 1);\n\t\t\t\t// then get the newbasket (which is the constant that stores our actual basket),\n\t\t\t\t// and find the index (within the basket) where you found the action.id, and then splice (cut out) the item associated with that id\n\t\t\t} else {\n\t\t\t\t// otherwise produce the console warning\n\t\t\t\tconsole.warn(\n\t\t\t\t\t`Cant remove product (id: ${action.id}) as its not in the basket`\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t// then return the state\n\t\t\t\tbasket: newBasket\n\t\t\t\t// set the basket to the new basket\n\t\t\t\t// Hence, the basket now will return the updated items after the item removal.\n\t\t\t};\n\t\t// break; // this break signifies that the case logic is finished\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default reducer;\n","import React from \"react\";\nimport \"./Subtotal.css\";\nimport CurrencyFormat from \"react-currency-format\";\nimport { useStateValue } from \"./StateProvider.js\";\nimport { getBasketTotal } from \"./reducer\";\n\nfunction Subtotal() {\n\tconst [{ basket }] = useStateValue(); // THIS IS THE DATA LAYER FROM STATE PROVIDER\n\t// THIS IS USUALLY SUMMONED WHEN WE WILL NEED TO THE GRAB THE BASKET ITEMS OR BASKET SOMEWHERE IN THE COMPONENT\n\n\treturn (\n\t\t<div className=\"subtotal\">\n\t\t\t{/* Here we will have the price */}\n\n\t\t\t<CurrencyFormat\n\t\t\t\trenderText={(value) => (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tSubtotal ({basket.length} items):\n\t\t\t\t\t\t\t{/* here basket.lenght will ouput the total number of the items in the basket */}\n\t\t\t\t\t\t\t<strong>{`${value}`}</strong>{\" \"}\n\t\t\t\t\t\t\t{/* Here it will say the total price of all the combined items */}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<small className=\"subtotal_gift\">\n\t\t\t\t\t\t\t<input type=\"checkbox\" />\n\t\t\t\t\t\t\tThis order contains a gift\n\t\t\t\t\t\t</small>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\tdecimalScale={2}\n\t\t\t\tvalue={getBasketTotal(basket)}\n\t\t\t\tdisplayType={\"text\"}\n\t\t\t\tthousandSeparator={true}\n\t\t\t\tprefix={\"$\"}\n\t\t\t/>\n\n\t\t\t<button> Proceed to Checkout </button>\n\t\t</div>\n\t);\n}\n\nexport default Subtotal;\n","import React from \"react\";\nimport \"./Checkout.css\";\nimport { useStateValue } from \"./StateProvider.js\";\nimport CheckoutProduct from \"./CheckoutProduct.js\";\nimport Subtotal from \"./Subtotal.js\";\n\nfunction CheckOut() {\n\tconst [{ basket }] = useStateValue(); // THIS IS THE DATA LAYER FROM STATE PROVIDER\n\t// THIS IS USUALLY SUMMONED WHEN WE WILL NEED TO THE GRAB THE BASKET ITEMS OR BASKET SOMEWHERE IN THE COMPONENT\n\n\treturn (\n\t\t<div className=\"checkout\">\n\t\t\t<div className=\"checkout_left\">\n\t\t\t\t<img\n\t\t\t\t\tclassName=\"checkout_ad\"\n\t\t\t\t\tsrc=\"https://images-na.ssl-images-amazon.com/images/G/02/UK_CCMP/TM/OCC_Amazon1._CB423492668_.jpg \"\n\t\t\t\t\talt=\"\"\n\t\t\t\t/>\n\n\t\t\t\t{basket.length === 0 ? ( // if the basket is empty, has no items, then return the below div\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h2> You shopping basket is empty</h2>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tYou have no items in your basket. To buy one or more items, click\n\t\t\t\t\t\t\t'Add to basket' next to the item\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t// other wise (i.e, if the basket is not empty) return the below div\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h2 className=\"checkout_title\">Your shopping basket</h2>\n\n\t\t\t\t\t\t{/* list all the checkout products */}\n\n\t\t\t\t\t\t{/* for every single item, return the checkout products component */}\n\n\t\t\t\t\t\t{basket.map((item) => (\n\t\t\t\t\t\t\t<CheckoutProduct\n\t\t\t\t\t\t\t\tid={item.id}\n\t\t\t\t\t\t\t\ttitle={item.title}\n\t\t\t\t\t\t\t\timage={item.image}\n\t\t\t\t\t\t\t\tprice={item.price}\n\t\t\t\t\t\t\t\trating={item.rating}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t{basket.length > 0 && ( // if the items in the basket (basket.lenght) are greater than 0 then return:\n\t\t\t\t<div className=\"checkout_right\">\n\t\t\t\t\t<Subtotal />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default CheckOut;\n","import React from \"react\";\nimport \"./Product.css\";\n\nimport { useStateValue } from \"./StateProvider.js\";\n\nfunction Product({ id, title, image, price, rating }) {\n\t// spit apart the object, and grab the id, title, image, price,rating\n\n\tconst [{}, dispatch] = useStateValue(); // THIS IS THE DATA LAYER FROM STATE PROVIDER\n\t// THIS IS USUALLY SUMMONED WHEN WILL NEED TO THE GRAB THE BASKET ITEMS OR BASKET SOMEWHERE IN THE COMPONENT\n\n\tconst addToBasket = () => {\n\t\t// console.log();\n\t\t// add item to basket\n\t\tdispatch({\n\t\t\ttype: \"ADD_TO_BASKET\", // this is the action.type from the reducer.js\n\t\t\titem: {\n\t\t\t\tid: id, // fetch the id of the item that's being added\n\t\t\t\ttitle: title, // fetch the title of the item that's being added\n\t\t\t\timage: image, // fetch the image of the item that's being added\n\t\t\t\tprice: price, // fetch the price of the item that's being added\n\t\t\t\trating: rating // fetch the rating of the item that's being added\n\t\t\t}\n\t\t});\n\t};\n\n\t// On click, the add to basket function is going to run.\n\t// It is going to dispatch an action (ex: ADD_TO_BASKET)\n\t// then we listen to the action in the reducer\n\t// When the action comes in, the basket gets updated\n\n\treturn (\n\t\t<div className=\"product\">\n\t\t\t<div className=\"product_info\">\n\t\t\t\t<p> {title} </p>\n\t\t\t\t<p className=\"product_price\">\n\t\t\t\t\t<small>$</small>\n\t\t\t\t\t<strong>{price}</strong>\n\t\t\t\t</p>\n\t\t\t\t<div className=\"product_rating\">\n\t\t\t\t\t{/*For the ratings, we want the ratings to be displayed in stars. \n                                                    So if the rating 4 out 5, then we want to see 4 stars.\n                                                    To do this we are going to use a built-in javascrip function.\n                                                    Here is the pseudocode for the function:\n                                                    {Array(rating) -> create an array that takes in the value of the property rating\n                                                    .fill()        -> fill it with the values of the property rating \n                                                    .map((_) => (  -> for each value output \n                                                    <p>⭐</p>      -> a ptag with the star element\n                                                    */}\n\t\t\t\t\t{Array(rating)\n\t\t\t\t\t\t.fill()\n\t\t\t\t\t\t.map((_) => (\n\t\t\t\t\t\t\t<p>⭐</p>\n\t\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<img src={image} alt=\"\" />\n\t\t\t<button onClick={addToBasket}>Add to basket</button>\n\t\t</div>\n\t);\n}\n\nexport default Product;\n","import React from \"react\";\nimport Product from \"./Product.js\";\nimport \"./Home.css\";\n\n// The home page has:\n// 1. The banner\n// 2. All Products (id, title, price, rating, image)\n\nfunction Home() {\n\treturn (\n\t\t<div className=\"home\">\n\t\t\t{/* This is the banner */}\n\n\t\t\t<img\n\t\t\t\tclassName=\"home_image\"\n\t\t\t\tsrc=\"https://images-eu.ssl-images-amazon.com/images/G/02/digital/video/merch2016/Hero/Covid19/Generic/GWBleedingHero_ENG_COVIDUPDATE__XSite_1500x600_PV_en-GB._CB428684220_.jpg\"\n\t\t\t\talt=\" \"\n\t\t\t/>\n\n\t\t\t{/* This is the product */}\n\n\t\t\t<div className=\"home_row\">\n\t\t\t\t<Product\n\t\t\t\t\tid=\"1234\"\n\t\t\t\t\ttitle=\"The Lean Startup: How Today's Entrepreneurs Use Continuous Innovation to Create\"\n\t\t\t\t\tprice={11.96}\n\t\t\t\t\trating={5}\n\t\t\t\t\timage=\"https://images-na.ssl-images-amazon.com/images/I/51T-sMqSMiL._SX329_BO1,204,203,200_.jpg\"\n\t\t\t\t/>\n\t\t\t\t<Product\n\t\t\t\t\tid=\"1235\"\n\t\t\t\t\ttitle=\"Acer SB220Q bi 21.5 Inches Full HD (1920 x 1080) IPS Ultra-Thin Zero Frame Monitor (HDMI VGA port),Black\"\n\t\t\t\t\tprice={89.99}\n\t\t\t\t\trating={4}\n\t\t\t\t\timage=\"https://images-na.ssl-images-amazon.com/images/I/81QpkIctqPL._AC_SX679_.jpg\"\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<div className=\"home_row\">\n\t\t\t\t<Product\n\t\t\t\t\tid=\"1236\"\n\t\t\t\t\ttitle=\"Seagate (STGD2000100) Game Drive for PS4 Systems 2TB External Hard Drive Portable HDD – USB 3.0, Officially Licensed Product\"\n\t\t\t\t\tprice={79.99}\n\t\t\t\t\trating={4}\n\t\t\t\t\timage=\"https://images-na.ssl-images-amazon.com/images/I/81M88kKp54L._AC_SX679_.jpg\"\n\t\t\t\t/>\n\t\t\t\t<Product\n\t\t\t\t\tid=\"1237\"\n\t\t\t\t\ttitle=\"AmazonBasics Lightweight Super Soft Easy Care Microfiber Sheet Set with 16 Deep Pockets - Queen, Spa Blue\"\n\t\t\t\t\tprice={20.99}\n\t\t\t\t\trating={3}\n\t\t\t\t\timage=\"https://images-na.ssl-images-amazon.com/images/I/71I38txiDQL._AC_SX522_.jpg\"\n\t\t\t\t/>\n\t\t\t\t<Product\n\t\t\t\t\tid=\"1238\"\n\t\t\t\t\ttitle=\"AmazonBasics Memory Foam Filled Bean Bag Chair with Microfiber Cover - 4', Gray\"\n\t\t\t\t\tprice={40.0}\n\t\t\t\t\trating={2}\n\t\t\t\t\timage=\"https://images-na.ssl-images-amazon.com/images/I/819hWnQOJeL._AC_SX569_.jpg\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"home_row\">\n\t\t\t\t<Product\n\t\t\t\t\tid=\"1239\"\n\t\t\t\t\ttitle=\"AmazonBasics Head Strap Camera Mount for GoPro\"\n\t\t\t\t\tprice={10.34}\n\t\t\t\t\trating={1}\n\t\t\t\t\timage=\"https://images-na.ssl-images-amazon.com/images/I/710ERU80dXL._AC_SX425_.jpg\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport \"./Login.css\";\nimport { Link, useHistory } from \"react-router-dom\";\n// import { auth } from \"firebase\";\n\nfunction Login() {\n\t// const history = useHistory();\n\tconst [email, setEmail] = useState(\"\");\n\tconst [password, setPassword] = useState(\"\");\n\n\t// const login = (event) => {\n\t// \t//\n\t// \tevent.preventDefault(); // this stops page referesh\n\t// \t// do the login logic here\n\n\t// \tauth()\n\t// \t\t.signInWithEmailAndPassword(email, password)\n\t// \t\t.then((auth) => {\n\t// \t\t\t// loggined in, redirect to homepage ..\n\t// \t\t\thistory.push(\"/\");\n\t// \t\t})\n\t// \t\t.catch((e) => alert(e.message));\n\t// };\n\n\t// const register = (event) => {\n\t// \t//\n\t// \tevent.preventDefault(); // this stops page referesh\n\t// \t// do the register logic here\n\n\t// \tauth()\n\t// \t\t.createUserWithEmailAndPassword(email, password)\n\t// \t\t//\n\t// \t\t.then((auth) => {\n\t// \t\t\t// created a user and loged in  and redirect to homepage..\n\t// \t\t\thistory.push(\"/\");\n\t// \t\t})\n\t// \t\t.catch((e) => alert(e.message));\n\t// };\n\n\treturn (\n\t\t<div className=\"login\">\n\t\t\t<Link to=\"/\">\n\t\t\t\t{/* this link, will wrap a picture, \n                    and when clicked it will \n                    redirect the user back to the homepage */}\n\t\t\t\t<img\n\t\t\t\t\tclassName=\"login_logo\"\n\t\t\t\t\tsrc=\"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a9/Amazon_logo.svg/1024px-Amazon_logo.svg.png\"\n\t\t\t\t\talt=\"\"\n\t\t\t\t/>\n\t\t\t</Link>\n\n\t\t\t<div className=\"login_container\">\n\t\t\t\t<h1> Sign in </h1>\n\n\t\t\t\t<form>\n\t\t\t\t\t<h5> Email </h5>\n\n\t\t\t\t\t<input\n\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\tonChange={(event) => setEmail(event.target.value)}\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t/>\n\n\t\t\t\t\t<h5>Password</h5>\n\n\t\t\t\t\t<input\n\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\tonChange={(event) => setPassword(event.target.value)}\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t/>\n\n\t\t\t\t\t<button\n\t\t\t\t\t\t//\n\t\t\t\t\t\t// onClick={login}\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tclassName=\"login_signInButton\"\n\t\t\t\t\t>\n\t\t\t\t\t\tSign in\n\t\t\t\t\t</button>\n\t\t\t\t</form>\n\n\t\t\t\t<p>\n\t\t\t\t\tTo use certain Amazon Services on a Product, you must have your own\n\t\t\t\t\tAmazon.com account, be logged in to your account on the Product, and\n\t\t\t\t\thave a valid payment method associated with your account.\n\t\t\t\t</p>\n\t\t\t\t<button\n\t\t\t\t\t//\n\t\t\t\t\t// onClick={register}\n\t\t\t\t\tclassName=\"login_registerButton\"\n\t\t\t\t>\n\t\t\t\t\tCreate your Amazon button\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Login;\n","import React, { useEffect } from \"react\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n// React apps are single page apps (SPA)\n// If you want to have different pages in a SPA, then you have to use the react router.\n// This will help you go to different pages without refreshing or reloading the SPA.\n// The router nests all the code.\n// The router is the parent that wraps the app.\n// It gives all the children, inside the app, page routing logic.\n// The route is determines what content will load, at which page url.\n// Inside of Switch is where we add the multiple types of routes to different pages\n// The last path is usually the default route - the Home page\n\n// Observation: You can add the same components to different pages/routes\n// For example: below we added the Header component to the checkout page, and to the homepage, but its not on the login page.\n\nimport Header from \"./Header.js\";\nimport CheckOut from \"./CheckOut.js\";\nimport Home from \"./Home.js\";\nimport Login from \"./Login.js\";\nimport \"./App.css\";\n\nimport { useStateValue } from \"./StateProvider.js\";\nimport { auth } from \"firebase\";\n\nfunction App() {\n\tconst [{ user }, dispatch] = useStateValue(); // THIS IS THE DATA LAYER FROM STATE PROVIDER\n\t// THIS IS USUALLY SUMMONED WHEN WILL NEED TO THE GRAB THE BASKET ITEMS OR BASKET SOMEWHERE IN THE COMPONENT\n\n\t// We need a piece of code which runs based on a given condition\n\t// this is what we call a useEffect Hook ------> very powerful and important\n\n\t// useEffect(\n\t// \t() => {\n\t// \t\tconst unsubscribe = auth().onAuthStateChanged((authUser) => {\n\t// \t\t\tif (authUser) {\n\t// \t\t\t\t//  the user is logged in ...\n\t// \t\t\t\tdispatch({\n\t// \t\t\t\t\ttype: \"SET_USER\",\n\t// \t\t\t\t\tuser: authUser\n\t// \t\t\t\t});\n\t// \t\t\t} else {\n\t// \t\t\t\t// the user is logged out ..\n\t// \t\t\t\tdispatch({\n\t// \t\t\t\t\ttype: \"SET_USER\",\n\t// \t\t\t\t\tuser: null\n\t// \t\t\t\t});\n\t// \t\t\t}\n\t// \t\t});\n\n\t// \t\tconsole.log(\"User is ...\", user);\n\n\t// \t\treturn () => {\n\t// \t\t\t// any clean up operations go in here...\n\t// \t\t\tunsubscribe();\n\t// \t\t};\n\t// \t},\n\t// the below comment was added because the empty brackets makes react things that hook is missing dependencies.\n\t// To see what happens, remove the disable line and run.\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t// \t[]\n\t// );\n\n\treturn (\n\t\t<Router>\n\t\t\t<div className=\"App\">\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/checkout\">\n\t\t\t\t\t\t<Header />{\" \"}\n\t\t\t\t\t\t{/* This is the Header component from Header.js It will appear on the check out page */}\n\t\t\t\t\t\t{/* For this path, Route path=\"/checkout\", \n\t\t\t\t\t\t\twhen you enter this url (http://localhost:3000/checkout)\n\t\t\t\t\t\t\tan h1 with the word checkout will appear on the page */}\n\t\t\t\t\t\t<CheckOut />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/login\">\n\t\t\t\t\t\t{/* For this path, Route path=\"/login\", \n\t\t\t\t\t\t\twhen you enter this url (http://localhost:3000/login)\n\t\t\t\t\t\t\tan h1 with the word login will appear on the page */}\n\t\t\t\t\t\t<Login />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t\t<Header />{\" \"}\n\t\t\t\t\t\t{/* This is the Header component from Header.js It will appear on the homepage */}\n\t\t\t\t\t\t<Home />{\" \"}\n\t\t\t\t\t\t{/* This is the Home component from Home.js It will appear on the homepage */}\n\t\t\t\t\t\t{/* For this first path, Route path=\"/\", \n\t\t\t\t\t\t\twhen you enter this url (http://localhost:3000/)\n\t\t\t\t\t\t\tan h1 with the word homepage will appear on the page */}\n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { StateProvider } from \"./StateProvider.js\";\nimport { initialState } from \"./reducer.js\";\nimport reducer from \"./reducer.js\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<StateProvider initialState={initialState} reducer={reducer}>\n\t\t\t{/* wrap the whole app in the <state provider> to make the react context api work */}\n\t\t\t<App />\n\t\t</StateProvider>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}